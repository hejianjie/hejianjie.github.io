<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>工具</title>
    <link href="/2021/07/22/%E5%B7%A5%E5%85%B7/"/>
    <url>/2021/07/22/%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Website</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tool</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>资源</title>
    <link href="/2021/07/22/%E8%B5%84%E6%BA%90/"/>
    <url>/2021/07/22/%E8%B5%84%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
    
    
    <categories>
      
      <category>Website</category>
      
    </categories>
    
    
    <tags>
      
      <tag>source</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo主题</title>
    <link href="/2021/07/22/Hexo%E4%B8%BB%E9%A2%98/"/>
    <url>/2021/07/22/Hexo%E4%B8%BB%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>hexo本身自带一套主题<code>landscape</code>，但是原主题过于简洁，通常在<a href="https://hexo.io/themes/">官方地址</a>选取其他主题替换。</p><h2 id="Next"><a href="#Next" class="headerlink" title="Next"></a><a href="https://theme-next.js.org/">Next</a></h2><p>个人使用的第一个主题，主题风格极度简洁，但是稳定性与功能性几乎是所有主题中最好的。主题适配多种插件，比较适合喜欢界面简洁但功能丰富的人群。</p><h2 id="Fluid"><a href="#Fluid" class="headerlink" title="Fluid"></a><a href="https://hexo.fluid-dev.com/docs/">Fluid</a></h2><p>目前使用的主题，主要我个人比较喜欢这款主题的布局与风格。在功能性方面，这款主题同样比较丰富，具体内容官方文档中均有详细描述。此外，主题配套的文档可谓十分详实，对于配置中可能会遇到的问题都有详细的说明。</p><hr><p>以上是我实际使用过的主题，下面两个主要是界面符合我个人审美，但并未实际使用，故仅给出链接。</p><h2 id="Ocean"><a href="#Ocean" class="headerlink" title="Ocean "></a><a href="https://zhwangart.com/2018/11/30/Ocean/">Ocean </a></h2><h2 id="Claudia"><a href="#Claudia" class="headerlink" title="Claudia"></a><a href="https://haojen.github.io/Claudia-theme-blog/">Claudia</a></h2>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
      <tag>theme</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo插件</title>
    <link href="/2020/10/06/Hexo%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/"/>
    <url>/2020/10/06/Hexo%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo评论插件"><a href="#Hexo评论插件" class="headerlink" title="Hexo评论插件"></a>Hexo评论插件</h1><p>大致对比了网上已有的评论插件，在考虑简便性以及成本的基础上，我个人选择使用gitalk用于博客搭建。Gitalk 是一个基于 Github Issue 和 Preact 开发的评论插件。</p><p>这里放一个Next主题下的评论系统的<a href="https://theme-next.js.org/docs/third-party-services/comments.html">官方链接</a>，感兴趣可以自行参考。</p><h2 id="构建方式"><a href="#构建方式" class="headerlink" title="构建方式"></a>构建方式</h2><ol><li><p>首先<a href="https://github.com/settings/applications/new">申请</a>一个新的OAuth Application，注册成功后会得到一个<code>Client ID</code>和<code>Client Secret</code>，这两项会在后续配置中用到，需要记一下。<img src="https://cdn.jsdelivr.net/gh/hejianjie/ImgForMD/blogimgs/a20210722214805.png" alt="img"></p><p><img src="https://cdn.jsdelivr.net/gh/hejianjie/ImgForMD/blogimgs/a20210722214825.png" alt="img"></p></li><li><p>建立评论仓库</p><p>建立由于存放评论的内容，设置中打开issues，默认应该是打开的</p><span id="more"></span></li><li><p>添加代码</p><p>通常情况下只要将对应的代码嵌入页面之中即可使用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/gitalk@latest/dist/gitalk.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;gitalk-container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>     <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">var</span> gitalk = <span class="hljs-keyword">new</span> Gitalk(&#123;</span><br><span class="javascript">    <span class="hljs-comment">// gitalk的主要参数</span></span><br><span class="javascript">      <span class="hljs-attr">clientID</span>: <span class="hljs-string">&#x27;&#x27;</span>,   <span class="hljs-comment">//上面获取到的值</span></span><br><span class="javascript">      <span class="hljs-attr">clientSecret</span>: <span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-comment">//上面获取到的值</span></span><br><span class="javascript">      <span class="hljs-attr">repo</span>: <span class="hljs-string">&#x27;&#x27;</span>,  <span class="hljs-comment">//你刚才建立仓库的名字</span></span><br><span class="javascript">      <span class="hljs-attr">owner</span>: <span class="hljs-string">&#x27;&#x27;</span>,   <span class="hljs-comment">//你的GitHub用户名字</span></span><br><span class="javascript">      <span class="hljs-attr">admin</span>:<span class="hljs-string">&#x27;&#x27;</span>,  <span class="hljs-comment">//你的GitHub用户的名字</span></span><br><span class="javascript">      <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment">//id不能重复</span></span><br><span class="javascript">        &#125;);</span><br><span class="javascript">      gitalk.render(<span class="hljs-string">&#x27;gitalk-container&#x27;</span>);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br></code></pre></td></tr></table></figure></li><li><p>Next主题配置</p><p>我个人使用的是Next主题，Next有对应的集成插件，修改主题_config.yml配置即可。Next以往版本内部为gitment参数，8.0版本修改为gitalk参数。<img src="https://cdn.jsdelivr.net/gh/hejianjie/ImgForMD/blogimgs/a20210722214630.png" alt="image-20201006092628245"></p><p>但配置项基本一致，重点是之前申请所得的两个参数。</p><p>此外还需要引入对应的js与css否则不会显示评论模块。<img src="https://cdn.jsdelivr.net/gh/hejianjie/ImgForMD/blogimgs/a20210722214654.png" alt="img"></p><p>加载完成后需要注册Github Application的账号登录评论模块，进行手动初始化评论才能让其他用户进行评论</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
      <tag>plugins</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo使用笔记</title>
    <link href="/2020/09/28/Hexo%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <url>/2020/09/28/Hexo%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​        通过网上教程以Hexo与Github自建个人博客，谨以此文纪念，同时对于使用过程中出现的问题以及学到的相关知识进行记录。</p><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hexo</span>: <span class="hljs-number">5</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">hexo</span>-cli: <span class="hljs-number">4</span>.<span class="hljs-number">2</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">os</span>: Windows_NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>.<span class="hljs-number">18362</span> win<span class="hljs-number">32</span> x<span class="hljs-number">64</span><br><span class="hljs-attribute">node</span>: <span class="hljs-number">12</span>.<span class="hljs-number">18</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">NexT</span> version <span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="Hexo相关知识点"><a href="#Hexo相关知识点" class="headerlink" title="Hexo相关知识点"></a>Hexo相关知识点</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li><p>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</p></li><li><p>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；同时我个人使用的主题Next也有多个版本（目前使用/**<a href="https://github.com/fluid-dev/hexo-theme-fluid">hexo-theme-fluid</a>**），截止此文撰写最新的版本为 8.0.0，往期的旧版本已停止维护，很多文章的对应配置信息也与新的版本有所出入，需要自行甄别；</p></li><li><p>hexo有2种<code>_config.yml</code>文件，一个是根目录下的全局的<code>_config.yml</code>，一个是各个<code>theme</code>下的；</p></li><li><p>有的教程会让配置SSH密钥，SSH密钥可以为了防止其他人恶意部署文件到你的仓库，使用以后每次部署文件都需要登录Github账号，通过下述配置可比避免每次登录：</p><p>修改配置文件的deploy属性</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">    type:</span> git<br><span class="hljs-symbol">    repo:</span> git@github.com:xxxxx/xxxxx.github.io.git<br><span class="hljs-symbol">    branch:</span> master<br></code></pre></td></tr></table></figure><p>当然在网上也看到有人将登录信息写在环境变量里或者修改git的配置信息，此处不做详细说明。</p></li></ol><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vala">hexo n [layout] &lt;title&gt;<br><span class="hljs-meta">#新建文章</span><br><span class="hljs-meta">#layout 可选参数，用于选取文章的布局模板，若省略则为默认post布局</span><br><span class="hljs-meta">#title 必填参数，用以指定文章标题，如果参数值中含有空格，则需要使用双引号包围</span><br></code></pre></td></tr></table></figure><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs haml">-<span class="ruby">p  <span class="hljs-comment">#自定义新文章的路径</span></span><br><span class="ruby"></span>-<span class="ruby">r <span class="hljs-comment">#如果存在同名文章，将其替换</span></span><br><span class="ruby"></span>-<span class="ruby">s <span class="hljs-comment">#文章的 Slug，作为新文章的文件名和发布后的 URL</span></span><br></code></pre></td></tr></table></figure><h5 id="Hexo新建标签、分类、归档等页面"><a href="#Hexo新建标签、分类、归档等页面" class="headerlink" title="Hexo新建标签、分类、归档等页面"></a>Hexo新建标签、分类、归档等页面</h5><p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> <span class="hljs-string">&quot;tages&quot;</span> <br></code></pre></td></tr></table></figure><blockquote><p>你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> --path about/me <span class="hljs-string">&quot;About me&quot;</span><br></code></pre></td></tr></table></figure><p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p><p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">hexo <span class="hljs-keyword">new</span> page <span class="hljs-comment">--path about/me</span><br></code></pre></td></tr></table></figure><p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p><p>对于tags之类的页面，如需生效，须找到对应的创建页面加上type,注意<code>type：</code>后面要有一个空格。</p></blockquote><p>然后打开对应路径中的文件，例如 <code>/source/tages/index.md</code>，设置其类型 type 值为“tages”，一定注意<code>type:</code>后一定要有空格。 </p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title: tags<br>date: 2020<span class="hljs-string">-09</span><span class="hljs-string">-28</span> 19:48:15<br>type: &quot;tags&quot;<br><span class="hljs-keyword">tags:</span> 标签<br></code></pre></td></tr></table></figure><p>当同时具有多个标签时，使用如下方式处理，注意便签之间仍旧需要注意空格问题。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">tags:</span> [标签1, 标签2, 标签3]<br></code></pre></td></tr></table></figure><p>最后打开 <code>/themes/主题/_config.yml</code>，把tages标签那项取消注释即可。在写文章时添加对应的tags或categories会自动归类。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">menu:</span><br><span class="hljs-symbol">  home:</span> / || fa fa-home<br><span class="hljs-symbol">  about:</span> <span class="hljs-meta-keyword">/about/</span> || fa fa-user<br><span class="hljs-symbol">  tags:</span> <span class="hljs-meta-keyword">/tags/</span> || fa fa-tags<br><span class="hljs-symbol">  categories:</span> <span class="hljs-meta-keyword">/categories/</span> || fa fa-th<br><span class="hljs-symbol">  archives:</span> <span class="hljs-meta-keyword">/archives/</span> || fa fa-archive<br>  <span class="hljs-meta"># schedule: /schedule/ || fa fa-calendar</span><br>  <span class="hljs-meta"># sitemap: /sitemap.xml || fa fa-sitemap</span><br>  <span class="hljs-meta"># commonweal: /404/ || fa fa-heartbeat</span><br></code></pre></td></tr></table></figure><h5 id="layout布局-文章模板，非网页布局"><a href="#layout布局-文章模板，非网页布局" class="headerlink" title="layout布局(文章模板，非网页布局)"></a>layout布局(文章模板，非网页布局)</h5><p>在<code>/scaffolds/</code>目录下是文章的模板，可以自己新建对应的模板，在创建文章时选择对应模板即可，图简单的话可以直接修改post.md，作为默认模板可以在创建文件时不选择模板。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title: &#123;&#123; title &#125;&#125;<br>date: &#123;&#123; date &#125;&#125;<br><span class="hljs-keyword">tags:</span> <br>categories: <br></code></pre></td></tr></table></figure><h5 id="写草稿"><a href="#写草稿" class="headerlink" title="写草稿"></a>写草稿</h5><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">draft</span> [layout] &lt;filename&gt;<br></code></pre></td></tr></table></figure><p>会在source/drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到drafts目录之中。</p><p>发布草稿</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">hexo publish [layout] <span class="hljs-tag">&lt;<span class="hljs-name">filename</span>&gt;</span><br></code></pre></td></tr></table></figure><p>如果要强行预览草稿，可以修改配置文件或者使用对应指令</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vala"><span class="hljs-meta">#更改配置文件</span><br>render_drafts: <span class="hljs-literal">true</span><br><br><span class="hljs-meta">#使用指令</span><br>$ hexo server --drafts<br></code></pre></td></tr></table></figure><h5 id="让文章不显示全部内容"><a href="#让文章不显示全部内容" class="headerlink" title="让文章不显示全部内容"></a>让文章不显示全部内容</h5><p>在合适的位置加上<code>&lt;!--more--&gt;</code>即可</p><h4 id="本地生成"><a href="#本地生成" class="headerlink" title="本地生成"></a>本地生成</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo g == hexo <span class="hljs-keyword">generate</span> #生成静态文件<br>hexo s == hexo server #启动服务预览<br></code></pre></td></tr></table></figure><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nix">hexo <span class="hljs-attr">d</span> == hexo deploy <span class="hljs-comment">#部署</span><br>hexo d <span class="hljs-attr">-g</span> == hexo g -d <span class="hljs-comment">#指定生成后部署</span><br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> clean <span class="hljs-comment">#清除缓存，网站显示异常时可尝试此操作</span><br></code></pre></td></tr></table></figure><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> --<span class="hljs-literal">debug</span> <span class="hljs-comment">#调试模式，用于将消息详细记录到终端和debug.log文件</span><br></code></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs haml">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器<br>    -<span class="ruby">s <span class="hljs-comment">#静态模式,仅提供 public 文件夹中的文件并禁用文件监视</span></span><br><span class="ruby"></span>    -<span class="ruby">p <span class="hljs-number">5000</span> <span class="hljs-comment">#定服务器端口，默认为 4000</span></span><br><span class="ruby"></span>    -<span class="ruby">i <span class="hljs-number">192.168</span>.<span class="hljs-number">1.1</span> <span class="hljs-comment">#指定服务器 IP 地址，默认为 0.0.0.0</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
